import React, {useEffect, useState} from 'react';
import { Link, useNavigate } from 'react-router-dom';
import Navigation from '../assets/jsx/Navigation';
import '../assets/css/header.css';

function Header() {
    const [isOpen, setIsOpen] = useState(false)

    const [searchQuery, setSearchQuery] = useState('');

    const navigate = useNavigate();

    const genres = ['Бестселлеры', 'Новинки', 'Фантастика', 'Роман', 'Детектив', 'Историческая литература', 'Научная литература'];

    const handleKeyPress = (event) => {
        if(event.key === 'Enter'){
            handleSearch();
        }
    };

    const handleSearch = () => {
        if (searchQuery.trim() !== '') {
            navigate(`/search/${encodeURIComponent(searchQuery)}`);
            window.location.reload();
        }
    };

    const handleCatalog = (genre) => {
        if (genre.trim() !== '') {
            if (genre === 'Бестселлеры') {
                navigate(`/catalog/${encodeURIComponent('Бестселлер')}`);
            }
            else {
                navigate(`/catalog/${encodeURIComponent(genre)}`);
            }
        }
        window.location.reload();
    };

    function changeSearch(e) {
        setSearchQuery(e.target.value)
    }

    return (
        <header>
            <nav className="navbar">
                <div className="title">
                    <Link to="/" className="title-link">
                        <p className="title-v1">Novel</p>
                        <p className="title-v2">Nook</p>
                    </Link>
                </div>
                <div className="nav-buttons">
                    <div className="catalog-container" onMouseUp={() => setIsOpen(true)}
                         onMouseLeave={() => setIsOpen(false)}>
                        <button className="catalog-button">
                            <svg className="catalog-svg" width="17" height="14" viewBox="0 0 17 14" fill="none"
                                 xmlns="http://www.w3.org/2000/svg">
                                <path
                                    d="M0.645898 6.00015C0.561511 5.99828 0.47773 6.02276 0.399421 6.07217C0.321112 6.12158 0.249839 6.19494 0.189742 6.28798C0.129646 6.38102 0.0819252 6.49189 0.0493533 6.61414C0.0167815 6.7364 8.10623e-06 6.8676 8.10623e-06 7.00012C8.10623e-06 7.13264 0.0167815 7.26384 0.0493533 7.38609C0.0819252 7.50834 0.129646 7.61921 0.189742 7.71225C0.249839 7.80529 0.321112 7.87865 0.399421 7.92806C0.47773 7.97747 0.561511 8.00195 0.645898 8.00008H16.3541C16.4385 8.00195 16.5223 7.97747 16.6006 7.92806C16.6789 7.87865 16.7502 7.80529 16.8103 7.71225C16.8704 7.61921 16.9181 7.50834 16.9507 7.38609C16.9832 7.26384 17 7.13264 17 7.00012C17 6.8676 16.9832 6.7364 16.9507 6.61414C16.9181 6.49189 16.8704 6.38102 16.8103 6.28798C16.7502 6.19494 16.6789 6.12158 16.6006 6.07217C16.5223 6.02276 16.4385 5.99828 16.3541 6.00015H0.645898Z"
                                    fill="white"/>
                                <path
                                    d="M0.399421 12.072C0.47773 12.0226 0.561511 11.9981 0.645898 12H16.3541C16.4385 11.9981 16.5223 12.0226 16.6006 12.072C16.6789 12.1214 16.7502 12.1948 16.8103 12.2878C16.8704 12.3808 16.9181 12.4917 16.9507 12.614C16.9832 12.7362 17 12.8674 17 12.9999C17 13.1325 16.9832 13.2637 16.9507 13.3859C16.9181 13.5082 16.8704 13.619 16.8103 13.7121C16.7502 13.8051 16.6789 13.8785 16.6006 13.9279C16.5223 13.9773 16.4385 14.0018 16.3541 13.9999H0.645898C0.561511 14.0018 0.47773 13.9773 0.399421 13.9279C0.321112 13.8785 0.249839 13.8051 0.189742 13.7121C0.129646 13.619 0.0819252 13.5082 0.0493533 13.3859C0.0167815 13.2637 8.10623e-06 13.1325 8.10623e-06 12.9999C8.10623e-06 12.8674 0.0167815 12.7362 0.0493533 12.614C0.0819252 12.4917 0.129646 12.3808 0.189742 12.2878C0.249839 12.1948 0.321112 12.1214 0.399421 12.072Z"
                                    fill="white"/>
                                <path
                                    d="M0.399413 0.0721177C0.477721 0.0227057 0.561503 -0.00177397 0.645889 0.000100006H16.3541C16.4385 -0.00177397 16.5223 0.0227057 16.6006 0.0721177C16.6789 0.12153 16.7502 0.194888 16.8103 0.28793C16.8704 0.380971 16.9181 0.491839 16.9506 0.614092C16.9832 0.736345 17 0.867543 17 1.00006C17 1.13258 16.9832 1.26378 16.9506 1.38604C16.9181 1.50829 16.8704 1.61916 16.8103 1.7122C16.7502 1.80524 16.6789 1.8786 16.6006 1.92801C16.5223 1.97742 16.4385 2.0019 16.3541 2.00003H0.645889C0.561503 2.0019 0.477721 1.97742 0.399413 1.92801C0.321104 1.8786 0.249831 1.80524 0.189734 1.7122C0.129638 1.61916 0.0819171 1.50829 0.0493452 1.38604C0.0167734 1.26378 0 1.13258 0 1.00006C0 0.867543 0.0167734 0.736345 0.0493452 0.614092C0.0819171 0.491839 0.129638 0.380971 0.189734 0.28793C0.249831 0.194888 0.321104 0.12153 0.399413 0.0721177Z"
                                    fill="white"/>
                            </svg>
                            Каталог
                        </button>
                        {isOpen && (
                            <div className="catalog-dropdown">
                                <ul>
                                    {genres.map((genre, index) => (
                                        <li onClick={() => handleCatalog(genre)} key={index}>{genre}</li>
                                    ))}
                                </ul>
                            </div>
                        )}
                    </div>

                    <div className="search">
                        <input type="text" className="search-input" placeholder="Искать на NovelNook..."
                               onChange={changeSearch}
                               onKeyPress={handleKeyPress}
                        />
                        <svg onClick={handleSearch} className="search-svg" width="20" height="20" viewBox="0 0 20 20" fill="none"
                             xmlns="http://www.w3.org/2000/svg">
                            <path
                                d="M8.0507 0.416687C3.61428 0.416687 0 3.88038 0 8.13194C0 12.3835 3.61428 15.8472 8.0507 15.8472C9.96974 15.8472 11.7339 15.1975 13.1193 14.1179L18.5663 19.338C18.643 19.4146 18.7349 19.4757 18.8366 19.5179C18.9384 19.56 19.0478 19.5822 19.1586 19.5833C19.2694 19.5844 19.3793 19.5643 19.4819 19.5241C19.5845 19.484 19.6777 19.4247 19.756 19.3496C19.8344 19.2745 19.8963 19.1852 19.9382 19.0869C19.9801 18.9885 20.0011 18.8832 20 18.777C19.9988 18.6708 19.9756 18.566 19.9317 18.4685C19.8877 18.371 19.8239 18.2829 19.7439 18.2094L14.2969 12.9893C15.4235 11.6616 16.1014 9.97102 16.1014 8.13194C16.1014 3.88038 12.4871 0.416687 8.0507 0.416687ZM8.0507 2.01295C11.5869 2.01295 14.4357 4.74306 14.4357 8.13194C14.4357 9.7828 13.7563 11.2743 12.654 12.373C12.5861 12.4209 12.5261 12.4784 12.4762 12.5435C11.3297 13.5998 9.77334 14.2509 8.0507 14.2509C4.51447 14.2509 1.66566 11.5208 1.66566 8.13194C1.66566 4.74306 4.51447 2.01295 8.0507 2.01295Z"
                                fill="white"/>
                        </svg>
                    </div>
                </div>

                <Navigation />

            </nav>
        </header>
    );
}

export default Header;
